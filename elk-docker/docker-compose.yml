version: "3"
services:
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
        container_name: elasticsearch
        hostname: elasticsearch
        environment:
            - "discovery.type=single-node"
            - "ELASTIC_PASSWORD=changeme"
            - "xpack.security.enabled=true"
        ports:
            - 9200:9200
            - 9300:9300
    kibana:
        image: docker.elastic.co/kibana/kibana:7.15.0
        container_name: kibana
        hostname: kibana
        ports:
            - 5601:5601
        links:
            - elasticsearch:elasticsearch
        depends_on:
          - elasticsearch
        environment:
          - "ELASTICSEARCH_USERNAME=elastic"
          - "ELASTICSEARCH_PASSWORD=changeme"
    logstash:
        image: docker.elastic.co/logstash/logstash:7.15.0
        container_name: logstash
        hostname: logstash
        ports:
            - 9600:9600
            - 8089:8089
        volumes:
          - ./logstash:/usr/share/logstash/pipeline/
        links:
            - elasticsearch:elasticsearch
        depends_on:
          - elasticsearch
    apm-server:
        image: docker.elastic.co/apm/apm-server:7.15.0
        cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
        cap_drop: ["ALL"]
        ports:
        - 8200:8200
        command: >
            apm-server -e
            -E apm-server.rum.enabled=true
            -E setup.kibana.host=kibana:5601
            -E setup.template.settings.index.number_of_replicas=0
            -E apm-server.kibana.enabled=true
            -E apm-server.kibana.host=kibana:5601
            -E output.elasticsearch.hosts=["elasticsearch:9200"]
            -E output.elasticsearch.username=elastic
            -E output.elasticsearch.password=changeme
        healthcheck:
            interval: 10s
            retries: 12
            test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
